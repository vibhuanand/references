Tomcat installation on EC2 instance

Pre-requisites
1. EC2 instance with Java v1.8.x

Install Apache Tomcat
1. Download tomcat packages from https://tomcat.apache.org/download-80.cgi onto /opt on EC2 instanceNote: Make sure you change <version> with the tomcat version which you download.# Create tomcat directory
2. cd /opt
3. wget http://mirrors.fibergrid.in/apache/tomcat/tomcat-8/v8.5.35/bin/apache-tomcat-8.5.35.tar.gz
4. tar -xvzf /opt/apache-tomcat-<version>.tar.gz
5. find / -name context.xml
vi /opt/tomcat/webapps/manager/META-INF/context.xml

Go to <valve classname section which only allows local host to connect with tomcat and comment it out  by putting <!— in the start and  —> in the end .

Do the same with 
vi /opt/tomcat/webapps/host-manager/META-INF/context.xml


1. give executing permissions to startup.sh and shutdown.sh which are under bin.chmod +x /opt/apache-tomcat-<version>/bin/startup.sh 
2. chmod +x /opt/apache-tomcat-<version>/bin/shutdown.shNote: you may get below error while starting tomcat incase if you dont install JavaNeither the JAVA_HOME nor the JRE_HOME environment variable is defined At least one of these environment variable is needed to run this program
3. create link files for tomcat startup.sh and shutdown.shln -s /opt/apache-tomcat-<version>/bin/startup.sh /usr/local/bin/tomcatup
4. ln -s /opt/apache-tomcat-<version>/bin/shutdown.sh /usr/local/bin/tomcatdown
5. tomcatup

Check point :
access tomcat application from browser on port 8080
* http://<Public_IP>:8080
Using unique ports for each application is a best practice in an environment. But tomcat and Jenkins runs on ports number 8080. Hence lets change tomcat port number to 8090. Change port number in conf/server.xml file under tomcat home
cd /opt/apache-tomcat-<version>/conf
# update port number in the "connecter port" field in server.xml
# restart tomcat after configuration update
tomcatdown
tomcatup

* http://<Public_IP>:8090
1. now application is accessible on port 8090. but tomcat application doesnt allow to login from browser. changing a default parameter in context.xml does address this issue#search for context.xml
2. find / -name context.xml
3. # Restart tomcat services
4. tomcatdown  
5. tomcatupUpdate users information in the tomcat-users.xml file goto tomcat home directory and Add below users to conf/tomcat-users.xml file <role rolename="manager-gui"/>
      <role rolename="manager-script"/>
     <role rolename="manager-jmx"/>
    <role rolename="manager-status"/>
    <user username="admin" password="admin" roles="manager-gui, manager-script, manager-jmx, manager-status"/>
   <user username="deployer" password="deployer" roles="manager-script"/>
<user username="tomcat" password="s3cret" roles="manager-gui"/>
1. Restart serivce and try to login to tomcat application from the browser. This time it should be Successful
2. 


You can add credential for deployment injenkins by accessing 
cat /opt/tomcat/conf/tomcat-users.xml and getting credentials for deployer